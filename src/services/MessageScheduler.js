const cron = require('node-cron');
const reminderTemplates = require('../templates/reminderTemplates');

class MessageScheduler {
    constructor(client, config) {
        this.client = client;
        this.config = config;
        this.recipientNumber = config.whatsapp.recipientNumber;
    }

    async sendMessage(type, customMessage = '') {
        try {
            const message = customMessage || reminderTemplates[type];
            await this.client.sendPresenceAvailable();
            await new Promise(resolve => setTimeout(resolve, this.config.whatsapp.typingDelay));
            await this.client.sendMessage(this.recipientNumber, message);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        }
    }

    startScheduling() {
        // –£—Ç—Ä–µ–Ω–Ω–∏–π –±–ª–æ–∫
        cron.schedule('55 5 * * *', () => {
            this.sendMessage('feedingPrep');
        });

        cron.schedule('0 6 * * *', () => {
            this.sendMessage('feeding');
        });

        cron.schedule('45 6 * * *', () => {
            this.sendMessage('morningExercise');
        });

        cron.schedule('0 8 * * *', () => {
            this.sendMessage('sensoryDevelopment');
        });

        cron.schedule('30 9 * * *', () => {
            this.sendMessage('socialDevelopment');
        });

        cron.schedule('30 10 * * *', () => {
            this.sendMessage('walkPrep');
        });

        // –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        cron.schedule('0 9 * * 1', () => {
            const weeklyFocus = reminderTemplates.getWeeklyFocus('monday');
            this.sendMessage('custom', weeklyFocus);
        });

        // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è –ø–∞–ø—ã
        cron.schedule('0 9 * * 1-5', () => {
            this.sendMessage('custom', `
üë®‚Äçüíº –ü–∞–ø–∞ —É—à—ë–ª –Ω–∞ —Ä–∞–±–æ—Ç—É

üíù –ü–æ–∂–µ–ª–∞–π—Ç–µ —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!
            `);
        });

        cron.schedule('0 18 * * 1-5', () => {
            this.sendMessage('custom', `
üë®‚Äçüë¶ –ü–∞–ø–∞ –≤–µ—Ä–Ω—É–ª—Å—è!

üí° –í—Ä–µ–º—è –¥–ª—è:
‚Ä¢ –û–±—â–µ–Ω–∏—è —Å ${this.config.baby.name}
‚Ä¢ –°–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –∏–≥—Ä
‚Ä¢ –ü–æ–º–æ—â–∏ –º–∞–º–µ
            `);
        });

        // –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∏—Ç–æ–≥–∏
        cron.schedule('0 21 * * *', () => {
            this.sendMessage('custom', `
üåô –ò—Ç–æ–≥–∏ –¥–Ω—è –¥–ª—è ${this.config.baby.name}:

üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å:
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ
‚Ä¢ –ù–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
‚Ä¢ –í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã

üò¥ –ü–æ—Ä–∞ –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫–æ —Å–Ω—É!
            `);
        });
    }
}

module.exports = MessageScheduler; 